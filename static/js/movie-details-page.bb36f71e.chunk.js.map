{"version":3,"sources":["img/back_arrow.svg","components/MovieDetailsPage/MovieDetailsPage.js","helpers/request.js","img/default-img.jpg"],"names":["module","exports","Cast","lazy","Reviews","MovieDetailsPage","state","movie","search","from","message","goBack","e","preventDefault","props","history","push","pathname","url","this","match","URL","requestMovieUrl","request","result","setState","location","path","className","src","BackArrow","alt","onClick","poster_path","title","defaultImg","vote_average","overview","genres","map","genre","key","id","name","to","activeClassName","fallback","component","Component","baseUrl","withCredentials","process","searchMoviesUrl","query","urlType","method","a","body","axios","data"],"mappings":"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","file":"static/js/movie-details-page.bb36f71e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back_arrow.362e7269.svg\";","import React, { Component, lazy, Suspense } from \"react\";\nimport { NavLink, Switch, Route } from \"react-router-dom\";\nimport { request, requestMovieUrl } from \"../../helpers/request\";\nimport Spinner from \"../Loader/Loader\";\nimport BackArrow from \"../../img/back_arrow.svg\";\nimport defaultImg from \"../../img/default-img.jpg\";\nimport \"./MovieDetailsPage.css\";\n\nconst Cast = lazy(() =>\n  import(\"../Cast/Cast\" /* webpackChunkName: \"movie-cast-page\" */)\n);\n\nconst Reviews = lazy(() =>\n  import(\"../Reviews/Reviews\" /* webpackChunkName: \"movie-reviews-page\" */)\n);\n\nclass MovieDetailsPage extends Component {\n  state = {\n    movie: [],\n    search: \"\",\n    from: \"\",\n    message: \"\",\n  };\n\n  async componentDidMount() {\n    const { url } = this.props.match;\n    const URL = requestMovieUrl(url);\n\n    try {\n      const result = await request(\"get\", URL);\n\n      this.setState({\n        movie: result,\n      });\n    } catch (error) {\n      const message = error.message;\n      this.setState({ message });\n    }\n\n    if (this.props.location.state) {\n      this.setState({\n        search: this.props.location.state.search,\n        from: this.props.location.state.from,\n      });\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n    const { from, search } = this.state;\n\n    if (search) {\n      this.props.history.push({\n        pathname: `${from}`,\n        search: `query=${search}`,\n        state: {\n          search,\n        },\n      });\n    } else {\n      this.props.history.push(\"/\");\n    }\n  };\n\n  render() {\n    const { path, url } = this.props.match;\n    const { movie, message } = this.state;\n\n    return (\n      <div className=\"Container\">\n        {message && (\n          <h2 className=\"Error\">Whoops, something went wrong: {message}</h2>\n        )}\n        <img\n          src={BackArrow}\n          alt=\"Back arrow\"\n          className=\"GoBack\"\n          onClick={this.goBack}\n        />\n        <div className=\"MuvieDetailWrapper\">\n          <div className=\"MoviePoster\">\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n                alt={movie.title}\n              />\n            ) : (\n              <img src={defaultImg} alt={movie.title} />\n            )}\n          </div>\n\n          <div className=\"MovieDescription\">\n            <h1 className=\"MovieTitle\">{movie.title}</h1>\n            {movie.vote_average > 0 && (\n              <p className=\"MovieScore\">User Score: {movie.vote_average}</p>\n            )}\n            <h2 className=\"MovieOverviewTitle\">Overview</h2>\n            <p className=\"MovieOverview\">{movie.overview}</p>\n            {movie.genres && <h3 className=\"MovieGenres\">Genres</h3>}\n            {movie.genres && (\n              <ul className=\"MovieGenresList\">\n                {movie.genres.map((genre) => (\n                  <li key={genre.id} className=\"MovieItem\">\n                    {genre.name}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n        <hr />\n        <div className=\"SubMenuWrapper\">\n          <h3 className=\"SubMenuTitle\">Additional information</h3>\n          <NavLink\n            to={`${url}/credits`}\n            className=\"SubMenuLink\"\n            activeClassName=\"SubMenuLinkActive\"\n          >\n            Credits\n          </NavLink>\n          <NavLink\n            to={`${url}/reviews`}\n            className=\"SubMenuLink\"\n            activeClassName=\"SubMenuLinkActive\"\n          >\n            Reviews\n          </NavLink>\n        </div>\n        <hr />\n\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <Route path={`${path}/credits`} component={Cast} />\n            <Route path={`${path}/reviews`} component={Reviews} />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n","import axios from \"axios\";\n\nconst baseUrl = `https://api.themoviedb.org/3`;\n\nexport const withCredentials = (url) => {\n  return `${url}api_key=${process.env.REACT_APP_API_KEY}`;\n};\n\nexport const searchMoviesUrl = (query) => {\n  return withCredentials(`${baseUrl}/search/movie?query=${query}&`);\n};\n\nexport const requestMovieUrl = (urlType = \"/trending/movie/day\") => {\n  return withCredentials(`${baseUrl}${urlType}?`);\n};\n\nexport const request = async (method, url, body = null) => {\n  const result = await axios[method](url, body);\n  return result.data;\n};\n\n/*\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>> - список самых популярных фильмов на сегодня для создания коллекции на главной странице.\nhttps://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&query=Max - поиск кинофильма по ключевому слову на странице фильмов.\nhttps://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>> - запрос полной информации о фильме для страницы кинофильма.\nhttps://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>> - запрос информации о актёрском составе для страницы кинофильма.\nhttps://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>> - запрос обзоров для страницы кинофильма.\n*/\n\n// export const getMovieReviewsUrl = (id) => {\n//   return withCredentials(`https://api.themoviedb.org/3/movie/${id}/reviews?`);\n// };\n\n// export const getMovieCreditsUrl = (id) => {\n//   return withCredentials(`https://api.themoviedb.org/3/movie/${id}/credits?`);\n// };\n\n// export const getMovieDetails = (id) => {\n//   return withCredentials(`https://api.themoviedb.org/3/movie/${id}?`);\n// };\n\n// export const getTrendingMovieUrl = () => {\n//   return withCredentials(`https://api.themoviedb.org/3/trending/movie/day?`);\n// };\n","module.exports = __webpack_public_path__ + \"static/media/default-img.80360e3f.jpg\";"],"sourceRoot":""}